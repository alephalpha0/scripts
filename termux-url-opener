#!/data/data/com.termux/files/usr/bin/bash
##################################################
## alephalpha0  |  Download files passed to me. ##
## created:2020-10-20   |  modified:2020-10-30  ##
##----------------------------------------------##
##        https://github.com/alephalpha0        ##
##            http://rootofpi.me                ##
####################           ###################
#############                        #############
## Many thanks to those who have shared and     ##
## discussed their dotfiles/source code/scripts ## 
## on blogs, stackoverflow, dev.to, gitlab /    ##
## github, and any open forum for ideas on the  ##
##  world wide web. I am continually learning   ##
## and discovering new things because of you.   ##
##################################################
## There is no LICENSE attached to this file.   ##
##     I require no attribute for its use.      ##
## Do what thou will. That's the whole of law.  ##
##----------------------------------------------##
##!!!!!!!!!!NO WARRANTY PROVIDED FOR!!!!!!!!!!!!##
##!!!!!!!!!!!ANY POSSIBLE USE EITHER!!!!!!!!!!!!##
##################################################
# Script takes urls passed to it and downloads the 
# playlist, video, file or page to ~/downloads/*. 
#
# I'm using it as the script termux uses when a url
# is passed to it from amother app.
#
# Trying to preempt myself and guess my general 
# reasons for sharing to termux. Main use in my 
# eyes is downloading raw files from github,
# and downloading videos from youtube.. 
###########################################################

###########TODO
# Pretty up the script.
# Add more cases to url options.
# Make it command-line ready?

### SCRIPT VARIABLES
#sets URL to the url shared/passed to termux
readonly URL=${1}
readonly PROGDIR=$(readlink -m $(dirname ${0}))
readonly PROGNAME=$(basename ${0})
readonly ARGS=${@}

dirExists() {
    # the subdirectory we are checking.
	local silkMouth=${1}

	if [ -d ~/downloads/${silkMouth} ]
	then
	    cd ~/downloads/${silkMouth}
	else
	    mkdir ~/downloads/${silkMouth}
	    cd ~/downloads/${silkMouth}
	fi
}



main(){

#get the file extension being passed to termux
local EXT="${URL#*.}"
# the base download dir
local DIR=~/downloads/

#######################################
# Main logic block. First will check ## that we didn't accidentally get
# passed an empty string. If so, we exit, hopefully gracefully like a
# lady.
if [ -z ${URL} ]; then
    echo "You've passed an empty string to the script. "
    exit
else
#######################################
# Logic train using case on URL parts to see how to handle downloading.
    case ${URL} in
      *playlist*) #check to see if incoming url is a youtube playlist
          dirExists music # see if ${DIR}/music exists & cd, if not mkdir & cd 
          youtube-dl --extract-audio --audio-format mp3 --audio-quality 0 -o "%(playlist_title)s/%(playlist_index)02d-%(title)s.%(ext)s" ${URL}
      ;;      
      *youtube*) # check to see if url is coming from youtube, phase 1
          dirExists videos # see if ${DIR}/videos exists & cd, if not mkdir & cd
          youtube-dl -o "%(title)s.%(ext)s" ${URL}
      ;;
      *youtu.be*) # check to see if url is coming from youtube, phase 2
          dirExists videos # see if ${DIR}/videos exists & cd, if not mkdir & cd
          youtube-dl -o "%(title)s.%(ext)s" ${URL}
      ;;
      *raw.github*) # check to see if url is coming from github.
          cd ${DIR} # cd to ~/downloads
          wget --show-progress ${URL} 
      ;;
      *.tar.bz2*) # getting an archive file from the web
          cd ${DIR} # cd to ~/downloads
          wget --show-progress ${URL} 
      ;;
      *)
          echo "I'm not sure what you want me to do here..."
      ;;
    esac
fi
}
main
